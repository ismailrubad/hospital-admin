[{"Z:\\hospital-admin\\src\\index.js":"1","Z:\\hospital-admin\\src\\reportWebVitals.js":"2","Z:\\hospital-admin\\src\\App.js":"3","Z:\\hospital-admin\\src\\history.js":"4","Z:\\hospital-admin\\src\\context\\AppContextProvider.js":"5","Z:\\hospital-admin\\src\\components\\SignIn\\SignIn.js":"6","Z:\\hospital-admin\\src\\components\\index.js":"7","Z:\\hospital-admin\\src\\components\\MainApp\\index.js":"8","Z:\\hospital-admin\\src\\Api\\district-api.js":"9","Z:\\hospital-admin\\src\\Api\\zone-api.js":"10","Z:\\hospital-admin\\src\\Api\\doctor-api.js":"11","Z:\\hospital-admin\\src\\Api\\billing-api.js":"12","Z:\\hospital-admin\\src\\Api\\hospital-api.js":"13","Z:\\hospital-admin\\src\\Api\\service-api.js":"14","Z:\\hospital-admin\\src\\Api\\staff-api.js":"15","Z:\\hospital-admin\\src\\Api\\customer-api.js":"16","Z:\\hospital-admin\\src\\Api\\disease-api.js":"17","Z:\\hospital-admin\\src\\components\\Dashboard\\Dashboard.js":"18","Z:\\hospital-admin\\src\\components\\Doctor\\Doctor.js":"19","Z:\\hospital-admin\\src\\components\\Area\\District.js":"20","Z:\\hospital-admin\\src\\components\\Area\\Zone.js":"21","Z:\\hospital-admin\\src\\components\\Billing\\Billing.js":"22","Z:\\hospital-admin\\src\\components\\Hospital\\Hospital.js":"23","Z:\\hospital-admin\\src\\components\\DiseaseCategory\\DiseaseCategory.js":"24","Z:\\hospital-admin\\src\\components\\Service\\Service.js":"25","Z:\\hospital-admin\\src\\components\\Staff\\Staff.js":"26","Z:\\hospital-admin\\src\\components\\Customer\\Staff.js":"27","Z:\\hospital-admin\\src\\components\\Layout\\index.js":"28","Z:\\hospital-admin\\src\\components\\Doctor\\DoctorList\\DoctorList.js":"29","Z:\\hospital-admin\\src\\components\\Area\\DistrictList\\DistrictList.js":"30","Z:\\hospital-admin\\src\\components\\Billing\\BillingList\\BillingList.js":"31","Z:\\hospital-admin\\src\\components\\Customer\\StaffList\\StaffList.js":"32","Z:\\hospital-admin\\src\\components\\Staff\\StaffList\\StaffList.js":"33","Z:\\hospital-admin\\src\\components\\DiseaseCategory\\DiseaseCategoryList\\DiseaseCategoryList.js":"34","Z:\\hospital-admin\\src\\components\\Area\\zoneList\\ZoneList.js":"35","Z:\\hospital-admin\\src\\components\\Service\\ServiceList\\ServiceList.js":"36","Z:\\hospital-admin\\src\\components\\Hospital\\HospitalList\\HospitalList.js":"37","Z:\\hospital-admin\\src\\components\\ImageHandlerModal\\ImageHandlerModal.jsx":"38","Z:\\hospital-admin\\src\\components\\ImageHandlerModal\\ImageControl\\ImageControl.jsx":"39","Z:\\hospital-admin\\src\\components\\ImageHandlerModal\\ImageControl\\UploadImage\\UploadImage.jsx":"40","Z:\\hospital-admin\\src\\components\\ImageHandlerModal\\ImageControl\\ThumbImage\\ThumbImage.jsx":"41","Z:\\hospital-admin\\src\\components\\ImageHandlerModal\\ImageControl\\Helper\\Helper.js":"42","Z:\\hospital-admin\\src\\components\\ImageHandlerModal\\ImageControl\\UploadImage\\ImageUploader\\ImageUploader.jsx":"43"},{"size":517,"mtime":1613479982221,"results":"44","hashOfConfig":"45"},{"size":375,"mtime":1613479982221,"results":"46","hashOfConfig":"45"},{"size":1961,"mtime":1613479982197,"results":"47","hashOfConfig":"45"},{"size":87,"mtime":1613479982220,"results":"48","hashOfConfig":"45"},{"size":15736,"mtime":1613479982220,"results":"49","hashOfConfig":"45"},{"size":182,"mtime":1613479982217,"results":"50","hashOfConfig":"45"},{"size":206,"mtime":1613479982218,"results":"51","hashOfConfig":"45"},{"size":1699,"mtime":1613479982214,"results":"52","hashOfConfig":"45"},{"size":1146,"mtime":1614259766363,"results":"53","hashOfConfig":"45"},{"size":1064,"mtime":1614259766363,"results":"54","hashOfConfig":"45"},{"size":1543,"mtime":1614259766363,"results":"55","hashOfConfig":"45"},{"size":659,"mtime":1614259766363,"results":"56","hashOfConfig":"45"},{"size":1787,"mtime":1614259766362,"results":"57","hashOfConfig":"45"},{"size":1191,"mtime":1614259766363,"results":"58","hashOfConfig":"45"},{"size":1047,"mtime":1614259766363,"results":"59","hashOfConfig":"45"},{"size":1004,"mtime":1614259766362,"results":"60","hashOfConfig":"45"},{"size":1141,"mtime":1614259766453,"results":"61","hashOfConfig":"45"},{"size":180,"mtime":1613479982204,"results":"62","hashOfConfig":"45"},{"size":11284,"mtime":1613828224156,"results":"63","hashOfConfig":"45"},{"size":5075,"mtime":1613479982198,"results":"64","hashOfConfig":"45"},{"size":8036,"mtime":1613479982199,"results":"65","hashOfConfig":"45"},{"size":10595,"mtime":1613479982201,"results":"66","hashOfConfig":"45"},{"size":14381,"mtime":1614256684483,"results":"67","hashOfConfig":"45"},{"size":5959,"mtime":1614256684482,"results":"68","hashOfConfig":"45"},{"size":11600,"mtime":1614256684485,"results":"69","hashOfConfig":"45"},{"size":9171,"mtime":1614256684487,"results":"70","hashOfConfig":"45"},{"size":8711,"mtime":1614256684481,"results":"71","hashOfConfig":"45"},{"size":11244,"mtime":1614259766362,"results":"72","hashOfConfig":"45"},{"size":24175,"mtime":1614259766362,"results":"73","hashOfConfig":"45"},{"size":16141,"mtime":1614259766362,"results":"74","hashOfConfig":"45"},{"size":18419,"mtime":1614259766362,"results":"75","hashOfConfig":"45"},{"size":17607,"mtime":1613828224154,"results":"76","hashOfConfig":"45"},{"size":18805,"mtime":1613828224161,"results":"77","hashOfConfig":"45"},{"size":11345,"mtime":1613828224155,"results":"78","hashOfConfig":"45"},{"size":18306,"mtime":1614259766363,"results":"79","hashOfConfig":"45"},{"size":21036,"mtime":1614259766362,"results":"80","hashOfConfig":"45"},{"size":22479,"mtime":1614259766363,"results":"81","hashOfConfig":"45"},{"size":1707,"mtime":1613479982213,"results":"82","hashOfConfig":"45"},{"size":6286,"mtime":1614259766362,"results":"83","hashOfConfig":"45"},{"size":435,"mtime":1613479982212,"results":"84","hashOfConfig":"45"},{"size":2163,"mtime":1614259766362,"results":"85","hashOfConfig":"45"},{"size":378,"mtime":1613479982209,"results":"86","hashOfConfig":"45"},{"size":4110,"mtime":1613479982212,"results":"87","hashOfConfig":"45"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"z5s5mj",{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"134","messages":"135","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"136","messages":"137","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"138","messages":"139","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"140","messages":"141","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"142","messages":"143","errorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"144","messages":"145","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"146","messages":"147","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"148","messages":"149","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"150","messages":"151","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"153"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"153"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"153"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"162","messages":"163","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"164","messages":"165","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},"Z:\\hospital-admin\\src\\index.js",[],"Z:\\hospital-admin\\src\\reportWebVitals.js",[],"Z:\\hospital-admin\\src\\App.js",["178","179"],"Z:\\hospital-admin\\src\\history.js",[],"Z:\\hospital-admin\\src\\context\\AppContextProvider.js",["180"],"Z:\\hospital-admin\\src\\components\\SignIn\\SignIn.js",[],"Z:\\hospital-admin\\src\\components\\index.js",[],"Z:\\hospital-admin\\src\\components\\MainApp\\index.js",["181"],"Z:\\hospital-admin\\src\\Api\\district-api.js",[],"Z:\\hospital-admin\\src\\Api\\zone-api.js",[],"Z:\\hospital-admin\\src\\Api\\doctor-api.js",[],"Z:\\hospital-admin\\src\\Api\\billing-api.js",[],"Z:\\hospital-admin\\src\\Api\\hospital-api.js",[],"Z:\\hospital-admin\\src\\Api\\service-api.js",[],"Z:\\hospital-admin\\src\\Api\\staff-api.js",[],"Z:\\hospital-admin\\src\\Api\\customer-api.js",[],"Z:\\hospital-admin\\src\\Api\\disease-api.js",[],"Z:\\hospital-admin\\src\\components\\Dashboard\\Dashboard.js",[],"Z:\\hospital-admin\\src\\components\\Doctor\\Doctor.js",["182"],"Z:\\hospital-admin\\src\\components\\Area\\District.js",["183","184"],"Z:\\hospital-admin\\src\\components\\Area\\Zone.js",["185","186"],"Z:\\hospital-admin\\src\\components\\Billing\\Billing.js",["187","188","189"],"Z:\\hospital-admin\\src\\components\\Hospital\\Hospital.js",["190"],"Z:\\hospital-admin\\src\\components\\DiseaseCategory\\DiseaseCategory.js",["191","192","193"],"Z:\\hospital-admin\\src\\components\\Service\\Service.js",["194","195","196"],"Z:\\hospital-admin\\src\\components\\Staff\\Staff.js",["197","198"],"Z:\\hospital-admin\\src\\components\\Customer\\Staff.js",["199","200"],"Z:\\hospital-admin\\src\\components\\Layout\\index.js",["201","202","203","204","205","206","207","208","209","210","211","212","213","214","215","216","217","218","219","220","221","222","223","224","225","226","227","228"],"Z:\\hospital-admin\\src\\components\\Doctor\\DoctorList\\DoctorList.js",["229","230","231","232","233","234","235","236"],"Z:\\hospital-admin\\src\\components\\Area\\DistrictList\\DistrictList.js",["237","238","239","240"],"Z:\\hospital-admin\\src\\components\\Billing\\BillingList\\BillingList.js",["241","242","243","244","245","246","247","248","249","250","251","252","253","254","255"],"Z:\\hospital-admin\\src\\components\\Customer\\StaffList\\StaffList.js",["256","257","258","259","260","261","262","263","264","265","266","267","268","269","270"],"import React, { Component } from 'react';\r\nimport { AppContext } from '../../../context/AppContextProvider';\r\n\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport axios from 'axios';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport { fetchZoneList } from \"../../../Api/zone-api\";\r\nimport { Box, CircularProgress } from '@material-ui/core';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Card from '@material-ui/core/Card';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { fetchCustomerDetails, deleteCustomer } from \"../../../Api/customer-api\";\r\n\r\nimport { fetchServiceDetails, deleteService } from \"../../../Api/service-api\";\r\n\r\nclass customerList extends Component {\r\n\r\n   state = {\r\n      currentPage: 1,\r\n      serviceTableSort: {\r\n         sort: \"name\",\r\n         sortOrder: 1\r\n      },\r\n      customerDetails: null,\r\n      customerDetailsModalOpen: false,\r\n      isloading: false,\r\n      searchQuery: null\r\n   }\r\n\r\n   startLoading = () => {\r\n      this.setState({ isloading: true })\r\n   };\r\n\r\n\r\n   stopLoading = () => {\r\n      this.setState({ isloading: false })\r\n   };\r\n\r\n\r\n   handleServiceDelete = (id) => {\r\n\r\n      var r = window.confirm(\"Do you want to delete the item?\");\r\n      if (r == true) {\r\n         deleteCustomer(id)\r\n            .then((response) => {\r\n               console.log(response);\r\n               this.context.updateCustomerList()\r\n            })\r\n            .catch(function (error) {\r\n               console.log(error);\r\n            })\r\n            .then(function () {\r\n               // always executed\r\n            });\r\n      } else {\r\n\r\n      }\r\n   }\r\n\r\n   handleRowChange = (event) => {\r\n      console.log(event.target.value)\r\n      // this.context.updateServiceTableRowNumber(event.target.value)\r\n      this.context.updateCustomerList(1, event.target.value, this.context.state.serviceTableSort.sort,\r\n         this.context.state.serviceTableSort.sortOrder, this.state.selectedHospital, this.state.searchQuery)\r\n   }\r\n\r\n   handleServiceEdit = (id) => {\r\n      console.log(id)\r\n   }\r\n\r\n\r\n   handlePaginationClick = (event, value) => {\r\n      // this.startLoading();\r\n      // this.context.updateCurrentcustomerListPageNumber(value, this.stopLoading)\r\n      this.context.updateCustomerList(value, this.context.state.serviceTableRowNumber, this.context.state.serviceTableSort.sort,\r\n         this.context.state.serviceTableSort.sortOrder, this.state.selectedHospital, this.state.searchQuery)\r\n   }\r\n\r\n   handleSortClick = (sort) => {\r\n      this.setState(preState => {\r\n         return {\r\n            serviceTableSort: {\r\n               sort,\r\n               sortOrder: preState.serviceTableSort.sortOrder == 1 ? -1 : 1\r\n            },\r\n            currentPage: 1\r\n         }\r\n      }, () => {\r\n         // console.log(this.state)\r\n         // this.context.sortServicetable(this.state.serviceTableSort.sort, this.state.serviceTableSort.sortOrder)\r\n         this.context.updateCustomerList(1, this.context.state.serviceTableRowNumber, this.state.serviceTableSort.sort,\r\n            this.state.serviceTableSort.sortOrder, this.state.selectedHospital, this.state.searchQuery)\r\n      })\r\n   }\r\n\r\n   handleCustomerDetailsModalOpen = () => {\r\n      this.setState({\r\n         customerDetailsModalOpen: true\r\n      })\r\n   }\r\n\r\n   handleCustomerDetailsModalClose = () => {\r\n      this.setState({\r\n         customerDetailsModalOpen: false\r\n      })\r\n   }\r\n\r\n   renderServiceDetailsModal = () => {\r\n      return (\r\n         <Modal\r\n            className=\"modal\"\r\n            aria-labelledby=\"transition-modal-title\"\r\n            aria-describedby=\"transition-modal-description\"\r\n            open={this.state.customerDetailsModalOpen}\r\n            onClose={this.handleCustomerDetailsModalClose}\r\n            closeAfterTransition\r\n            BackdropComponent={Backdrop}\r\n            BackdropProps={{\r\n               timeout: 500,\r\n            }}\r\n         >\r\n            <Fade in={this.state.customerDetailsModalOpen}>\r\n               <Grid container spacing={3}>\r\n                  <Grid item xs={6} className=\"col_center\">\r\n                     <Card>\r\n                        <CardHeader\r\n                           action={\r\n                              <IconButton onClick={this.handleCustomerDetailsModalClose} aria-label=\"settings\">\r\n                                 <CloseIcon />\r\n                              </IconButton>\r\n                           }\r\n                           title=\"Customer Details\"\r\n                        />\r\n                        <CardContent>\r\n                           {\r\n                              this.state.customerDetails ?\r\n\r\n\r\n                                 <TableContainer component={Paper}>\r\n                                    <Table size=\"small\" aria-label=\"simple table\">\r\n\r\n                                       <TableBody>\r\n                                          <TableRow>\r\n                                             <TableCell align=\"\"><strong>Phone</strong></TableCell>\r\n                                             <TableCell align=\"\">{this.state.customerDetails.phone}</TableCell>\r\n                                          </TableRow>\r\n                                       </TableBody>\r\n                                    </Table>\r\n                                 </TableContainer>\r\n\r\n                                 // <Grid container spacing={3}>\r\n                                 //    <Grid item xs={6}>\r\n                                 //       <Box display=\"flex\">\r\n                                 //          <Typography variant=\"h6\" component=\"h6\" gutterBottom>\r\n                                 //             Zone Name: </Typography>\r\n                                 //       </Box>\r\n                                 //    </Grid>\r\n                                 //    <Grid item xs={6}>\r\n                                 //       <Box alignItems=\"center\" display=\"flex\" style={{ height: '100%' }}>\r\n                                 //          <Typography variant=\"body1\" gutterBottom>{this.state.serviceDetails.name}</Typography>\r\n                                 //       </Box>\r\n                                 //    </Grid>\r\n                                 // </Grid>\r\n                                 : null\r\n                           }\r\n                        </CardContent>\r\n                     </Card>\r\n                  </Grid>\r\n               </Grid>\r\n            </Fade>\r\n         </Modal >\r\n      )\r\n   }\r\n\r\n   handleDetails = (id) => {\r\n      fetchCustomerDetails(id).then((response) => {\r\n         this.setState({\r\n            customerDetails: response.data\r\n         }, () => {\r\n            this.setState({\r\n               customerDetailsModalOpen: true\r\n            })\r\n         })\r\n         console.log(response);\r\n      })\r\n         .catch(function (error) {\r\n            console.log(error);\r\n         })\r\n         .then(function () {\r\n            // always executed\r\n         });\r\n   }\r\n\r\n   handleSearchQueryChange = (searchQuery) => {\r\n      // this.context.updateDoctorList(1, this.context.state.doctorTableRowNumber,\r\n      //    this.context.state.doctorTableSort.sort, this.context.state.doctorTableSort.sortOrder, id)\r\n      this.setState({\r\n         searchQuery\r\n      }, () => {\r\n\r\n         this.context.updateCustomerList(1, this.context.state.serviceTableRowNumber, this.state.serviceTableSort.sort,\r\n            this.state.serviceTableSort.sortOrder, this.state.selectedHospital, this.state.searchQuery)\r\n\r\n      })\r\n   }\r\n\r\n   handleHospitalChange = (id) => {\r\n      this.setState({\r\n         hospitalList: this.state.hospitalList.map(item => {\r\n            if (item._id === id)\r\n               item['status'] = true;\r\n            else\r\n               item['status'] = false;\r\n\r\n            return item;\r\n         }),\r\n         selectedHospital: id\r\n      }, () => {\r\n         this.context.updateCustomerList(1, this.context.state.serviceTableRowNumber, this.state.serviceTableSort.sort,\r\n            this.state.serviceTableSort.sortOrder, this.state.selectedHospital, this.state.searchQuery)\r\n\r\n      })\r\n   }\r\n\r\n   componentDidMount() {\r\n      this.context.updateCustomerList();\r\n   }\r\n\r\n   render() {\r\n      return (\r\n         <>\r\n            <Grid container spacing={3}>\r\n\r\n               {/* <Grid item xs={3}>\r\n                  <Card>\r\n                     <CardContent>\r\n                        <Typography variant=\"h6\" gutterBottom>Filter By</Typography>\r\n                        <Box mb={2}>\r\n                           <TextField onChange={(e) => { this.handleSearchQueryChange(e.target.value) }} id=\"standard-basic\" label=\"Search By Name\" />\r\n                        </Box>\r\n                        <Accordion>\r\n                           <AccordionSummary\r\n                              expandIcon={<ExpandMoreIcon />}\r\n                              aria-controls=\"panel2a-content\"\r\n                              id=\"panel2a-header\"\r\n                           >\r\n                              <Typography >Hospital</Typography>\r\n                           </AccordionSummary>\r\n                           <AccordionDetails>\r\n                              <div className=\"accMaxHight\">\r\n\r\n                                 {this.state.hospitalList ?\r\n\r\n                                    this.state.hospitalList.map((item) => {\r\n                                       return (\r\n                                          <div>\r\n                                             <FormControlLabel\r\n                                                control={\r\n                                                   <Checkbox\r\n                                                      checked={item.status}\r\n                                                      onChange={() => {\r\n                                                         this.handleHospitalChange(item._id)\r\n                                                      }}\r\n                                                      name=\"checkedB\"\r\n                                                      color=\"primary\"\r\n                                                   />\r\n                                                }\r\n                                                label={item.name}\r\n                                             />\r\n                                          </div>\r\n\r\n                                       )\r\n                                    })\r\n\r\n                                    : null\r\n                                 }\r\n                              </div>\r\n                           </AccordionDetails>\r\n                        </Accordion>\r\n                     </CardContent>\r\n                  </Card>\r\n               </Grid> */}\r\n               <Grid item xs={12}>\r\n                  {this.context.state.customerList ?\r\n                     <div className=\"table_wrapper\">\r\n                        {this.state.isloading &&\r\n                           <div className=\"loader_area\">\r\n                              <CircularProgress />\r\n                           </div>\r\n                        }\r\n                        <TableContainer style={{ maxHeight: 500, }} component={Paper}>\r\n                           <Table stickyHeader={true} aria-label=\"simple table\" size=\"small\" >\r\n                              <TableHead>\r\n                                 <TableRow>\r\n                                    <TableCell>Customer Name <IconButton onClick={() => { this.handleSortClick(\"name\") }}>\r\n                                       {\r\n                                          this.state.serviceTableSort.sort == \"name\" ?\r\n                                             this.state.serviceTableSort.sortOrder == 1 ? <ArrowDownwardIcon /> : <ArrowUpwardIcon />\r\n                                             : <ArrowUpwardIcon style={{ opacity: .2 }} />\r\n                                       }\r\n\r\n                                    </IconButton></TableCell>\r\n                                    <TableCell align=\"\">Phone</TableCell>\r\n                                    {/* <TableCell align=\"\">SR <IconButton onClick={() => { this.handleSortClick(\"charge\") }}>\r\n                                       {\r\n                                          this.state.serviceTableSort.sort == \"charge\" ?\r\n                                             this.state.serviceTableSort.sortOrder == 1 ? <ArrowDownwardIcon /> : <ArrowUpwardIcon />\r\n                                             : <ArrowUpwardIcon style={{ opacity: .2 }} />\r\n                                       }\r\n\r\n                                    </IconButton></TableCell> */}\r\n                                    <TableCell align=\"\">Actions</TableCell>\r\n                                 </TableRow>\r\n                              </TableHead>\r\n                              <TableBody>\r\n                                 {\r\n                                    this.context.state.customerList ?\r\n                                       this.context.state.customerList.data.map((row) => (\r\n\r\n                                          <TableRow key={row._id}>\r\n                                             <TableCell component=\"th\" scope=\"row\">{row.name}</TableCell>\r\n                                             <TableCell align=\"\">{row.phone} </TableCell>\r\n                                             {/* <TableCell align=\"\">{row.charge} </TableCell> */}\r\n                                             <TableCell align=\"\">\r\n                                                <IconButton onClick={() => this.handleDetails(row._id)} aria-label=\"delete\">\r\n                                                   <VisibilityIcon />\r\n                                                </IconButton>\r\n                                                <IconButton onClick={() => this.props.editCustomer(row)} aria-label=\"delete\">\r\n                                                   <EditIcon />\r\n                                                </IconButton>\r\n                                                <IconButton onClick={() => this.handleServiceDelete(row._id)} aria-label=\"delete\">\r\n                                                   <DeleteIcon />\r\n                                                </IconButton>\r\n                                             </TableCell>\r\n                                          </TableRow>\r\n                                       )) : null\r\n                                 }\r\n                              </TableBody>\r\n\r\n                           </Table>\r\n\r\n                        </TableContainer>\r\n                        <Card>\r\n                           <Box p={2} justifyContent=\"flex-end\" display=\"flex\">\r\n                              <div className=\"pageRowWp\">\r\n                                 <span>Page per row</span>\r\n                                 <TextField\r\n\r\n                                    style={{ maxWidth: 50, margin: 0 }}\r\n                                    id=\"standard-select-currency-native\"\r\n                                    select\r\n                                    onChange={this.handleRowChange}\r\n                                    SelectProps={{\r\n                                       native: true,\r\n                                    }}\r\n                                 >\r\n                                    <option value=\"5\">5</option>\r\n                                    <option value=\"10\">10</option>\r\n                                    <option value=\"15\">15</option>\r\n                                 </TextField>\r\n                              </div>\r\n                              <Pagination variant=\"outlined\" page={this.context.state.currentcustomerListPageNumber} shape=\"rounded\" count={this.context.state.customerList.page.totalPage}\r\n                                 onChange={(event, value) => { this.handlePaginationClick(event, value) }} />\r\n                           </Box>\r\n                        </Card>\r\n                     </div> : \"no data found\"\r\n                  }\r\n               </Grid>\r\n            </Grid>\r\n            {this.renderServiceDetailsModal()}\r\n         </>\r\n      );\r\n   }\r\n}\r\n\r\ncustomerList.contextType = AppContext;\r\n\r\nexport default customerList;",["271","272"],"Z:\\hospital-admin\\src\\components\\Staff\\StaffList\\StaffList.js",["273","274","275","276","277","278"],"import React, { Component } from 'react';\r\nimport { AppContext } from '../../../context/AppContextProvider';\r\n\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport axios from 'axios';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport { fetchZoneList } from \"../../../Api/zone-api\";\r\nimport { Box, CircularProgress } from '@material-ui/core';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Card from '@material-ui/core/Card';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { fetchAllHospital } from \"../../../Api/hospital-api\";\r\n\r\nimport { fetchStaffDetails, deleteStaff } from \"../../../Api/staff-api\";\r\n\r\nclass ServiceList extends Component {\r\n\r\n   state = {\r\n      currentPage: 1,\r\n      staffTableSort: {\r\n         sort: \"name\",\r\n         sortOrder: 1\r\n      },\r\n      staffDetails: null,\r\n      staffDetailsModalOpen: false,\r\n      isloading: false,\r\n      searchQuery: null,\r\n      hospitalList: null\r\n   }\r\n\r\n   startLoading = () => {\r\n      this.setState({ isloading: true })\r\n   };\r\n\r\n\r\n   stopLoading = () => {\r\n      this.setState({ isloading: false })\r\n   };\r\n\r\n\r\n   handleStaffDelete = (id) => {\r\n\r\n      var r = window.confirm(\"Do you want to delete the item?\");\r\n      if (r == true) {\r\n         deleteStaff(id)\r\n            .then((response) => {\r\n               console.log(response);\r\n               this.context.updateStaffList()\r\n            })\r\n            .catch(function (error) {\r\n               console.log(error);\r\n            })\r\n            .then(function () {\r\n               // always executed\r\n            });\r\n      } else {\r\n\r\n      }\r\n   }\r\n\r\n   handleRowChange = (event) => {\r\n      console.log(event.target.value)\r\n      // this.context.updateServiceTableRowNumber(event.target.value)\r\n      this.context.updateServiceList(1, event.target.value, this.context.state.serviceTableSort.sort,\r\n         this.context.state.serviceTableSort.sortOrder, this.state.selectedHospital, this.state.searchQuery)\r\n   }\r\n\r\n   handleServiceEdit = (id) => {\r\n      console.log(id)\r\n   }\r\n\r\n\r\n   handlePaginationClick = (event, value) => {\r\n      // this.startLoading();\r\n      // this.context.updateCurrentServicelistPageNumber(value, this.stopLoading)\r\n      this.context.updateServiceList(value, this.context.state.serviceTableRowNumber, this.context.state.serviceTableSort.sort,\r\n         this.context.state.serviceTableSort.sortOrder, this.state.selectedHospital, this.state.searchQuery)\r\n   }\r\n\r\n   handleSortClick = (sort) => {\r\n      this.setState(preState => {\r\n         return {\r\n            serviceTableSort: {\r\n               sort,\r\n               sortOrder: preState.serviceTableSort.sortOrder == 1 ? -1 : 1\r\n            },\r\n            currentPage: 1\r\n         }\r\n      }, () => {\r\n         // console.log(this.state)\r\n         // this.context.sortServicetable(this.state.serviceTableSort.sort, this.state.serviceTableSort.sortOrder)\r\n         this.context.updateServiceList(1, this.context.state.serviceTableRowNumber, this.state.serviceTableSort.sort,\r\n            this.state.serviceTableSort.sortOrder, this.state.selectedHospital, this.state.searchQuery)\r\n      })\r\n   }\r\n\r\n   handlestaffDetailsModalOpen = () => {\r\n      this.setState({\r\n         staffDetailsModalOpen: true\r\n      })\r\n   }\r\n\r\n   handleServiceDetailsModalClose = () => {\r\n      this.setState({\r\n         staffDetailsModalOpen: false\r\n      })\r\n   }\r\n\r\n   renderStaffDetailsModal = () => {\r\n      return (\r\n         <Modal\r\n            className=\"modal\"\r\n            aria-labelledby=\"transition-modal-title\"\r\n            aria-describedby=\"transition-modal-description\"\r\n            open={this.state.staffDetailsModalOpen}\r\n            onClose={this.handleServiceDetailsModalClose}\r\n            closeAfterTransition\r\n            BackdropComponent={Backdrop}\r\n            BackdropProps={{\r\n               timeout: 500,\r\n            }}\r\n         >\r\n            <Fade in={this.state.staffDetailsModalOpen}>\r\n               <Grid container spacing={3}>\r\n                  <Grid item xs={6} className=\"col_center\">\r\n                     <Card>\r\n                        <CardHeader\r\n                           action={\r\n                              <IconButton onClick={this.handleServiceDetailsModalClose} aria-label=\"settings\">\r\n                                 <CloseIcon />\r\n                              </IconButton>\r\n                           }\r\n                           title=\"Staff Details\"\r\n                        />\r\n                        <CardContent>\r\n                           {\r\n                              this.state.staffDetails ?\r\n\r\n                                 <TableContainer component={Paper}>\r\n                                    <Table size=\"small\" aria-label=\"simple table\">\r\n\r\n                                       <TableBody>\r\n                                          <TableRow>\r\n                                             <TableCell align=\"\"><strong>Name</strong></TableCell>\r\n                                             <TableCell align=\"\">{this.state.staffDetails.name}</TableCell>\r\n                                          </TableRow>\r\n                                          <TableRow>\r\n                                             <TableCell align=\"\"><strong>Phone</strong></TableCell>\r\n                                             <TableCell align=\"\">{this.state.staffDetails.phone}</TableCell>\r\n                                          </TableRow>\r\n                                          <TableRow>\r\n                                             <TableCell align=\"\"><strong>Hospital Name</strong></TableCell>\r\n                                             <TableCell align=\"\">{this.state.staffDetails.hospital ?\r\n                                                this.state.staffDetails.hospital.name : null}</TableCell>\r\n                                          </TableRow>\r\n                                          <TableRow>\r\n                                             <TableCell align=\"\"><strong>Hospital Address</strong></TableCell>\r\n                                             <TableCell align=\"\">{this.state.staffDetails.hospital ?\r\n                                                this.state.staffDetails.hospital.address : null}</TableCell>\r\n                                          </TableRow>\r\n                                       </TableBody>\r\n                                    </Table>\r\n                                 </TableContainer>\r\n\r\n                                 // <Grid container spacing={3}>\r\n                                 //    <Grid item xs={6}>\r\n                                 //       <Box display=\"flex\">\r\n                                 //          <Typography variant=\"h6\" component=\"h6\" gutterBottom>\r\n                                 //             Zone Name: </Typography>\r\n                                 //       </Box>\r\n                                 //    </Grid>\r\n                                 //    <Grid item xs={6}>\r\n                                 //       <Box alignItems=\"center\" display=\"flex\" style={{ height: '100%' }}>\r\n                                 //          <Typography variant=\"body1\" gutterBottom>{this.state.serviceDetails.name}</Typography>\r\n                                 //       </Box>\r\n                                 //    </Grid>\r\n                                 // </Grid>\r\n                                 : null\r\n                           }\r\n                        </CardContent>\r\n                     </Card>\r\n                  </Grid>\r\n               </Grid>\r\n            </Fade>\r\n         </Modal >\r\n      )\r\n   }\r\n\r\n   handleDetails = (id) => {\r\n      fetchStaffDetails(id).then((response) => {\r\n         this.setState({\r\n            staffDetails: response.data\r\n         }, () => {\r\n            this.setState({\r\n               staffDetailsModalOpen: true\r\n            })\r\n         })\r\n         console.log(response);\r\n      })\r\n         .catch(function (error) {\r\n            console.log(error);\r\n         })\r\n         .then(function () {\r\n            // always executed\r\n         });\r\n   }\r\n\r\n   handleSearchQueryChange = (searchQuery) => {\r\n      // this.context.updateDoctorList(1, this.context.state.doctorTableRowNumber,\r\n      //    this.context.state.doctorTableSort.sort, this.context.state.doctorTableSort.sortOrder, id)\r\n      this.setState({\r\n         searchQuery\r\n      }, () => {\r\n\r\n         this.context.updateServiceList(1, this.context.state.serviceTableRowNumber, this.state.serviceTableSort.sort,\r\n            this.state.serviceTableSort.sortOrder, this.state.selectedHospital, this.state.searchQuery)\r\n\r\n      })\r\n   }\r\n\r\n   handleHospitalChange = (id) => {\r\n      this.setState({\r\n         hospitalList: this.state.hospitalList.map(item => {\r\n            if (item._id === id)\r\n               item['status'] = true;\r\n            else\r\n               item['status'] = false;\r\n\r\n            return item;\r\n         }),\r\n         selectedHospital: id\r\n      }, () => {\r\n         this.context.updateStaffList(1, this.context.state.currentStaffTableRowNumber, this.state.staffTableSort.sort,\r\n            this.state.staffTableSort.sortOrder, this.state.selectedHospital, this.state.searchQuery)\r\n\r\n      })\r\n   }\r\n\r\n   componentDidMount() {\r\n      this.context.updateStaffList();\r\n      fetchAllHospital().then((response) => {\r\n         this.setState({\r\n            hospitalList: response.data.data.map(item => {\r\n               item['status'] = false;\r\n               return item;\r\n            })\r\n         });\r\n\r\n         console.log(response);\r\n      })\r\n         .catch(function (error) {\r\n            console.log(error);\r\n         })\r\n         .then(function () {\r\n            // always executed\r\n         });\r\n   }\r\n\r\n   render() {\r\n      return (\r\n         <>\r\n            <Grid container spacing={3}>\r\n\r\n               <Grid item xs={3}>\r\n                  <Card>\r\n                     <CardContent>\r\n                        <Accordion>\r\n                           <AccordionSummary\r\n                              expandIcon={<ExpandMoreIcon />}\r\n                              aria-controls=\"panel2a-content\"\r\n                              id=\"panel2a-header\"\r\n                           >\r\n                              <Typography >Hospital</Typography>\r\n                           </AccordionSummary>\r\n                           <AccordionDetails>\r\n                              <div className=\"accMaxHight\">\r\n\r\n                                 {this.state.hospitalList ?\r\n\r\n                                    this.state.hospitalList.map((item) => {\r\n                                       return (\r\n                                          <div>\r\n                                             <FormControlLabel\r\n                                                control={\r\n                                                   <Checkbox\r\n                                                      checked={item.status}\r\n                                                      onChange={() => {\r\n                                                         this.handleHospitalChange(item._id)\r\n                                                      }}\r\n                                                      name=\"checkedB\"\r\n                                                      color=\"primary\"\r\n                                                   />\r\n                                                }\r\n                                                label={item.name}\r\n                                             />\r\n                                          </div>\r\n\r\n                                       )\r\n                                    })\r\n\r\n                                    : null\r\n                                 }\r\n                              </div>\r\n                           </AccordionDetails>\r\n                        </Accordion>\r\n                     </CardContent>\r\n                  </Card>\r\n               </Grid>\r\n               <Grid item xs={9}>\r\n                  {this.context.state.staffList ?\r\n                     <div className=\"table_wrapper\">\r\n                        {this.state.isloading &&\r\n                           <div className=\"loader_area\">\r\n                              <CircularProgress />\r\n                           </div>\r\n                        }\r\n                        <TableContainer style={{ maxHeight: 500, }} component={Paper}>\r\n                           <Table stickyHeader={true} aria-label=\"simple table\" size=\"small\" >\r\n                              <TableHead>\r\n                                 <TableRow>\r\n                                    <TableCell>Customer Name <IconButton onClick={() => { this.handleSortClick(\"name\") }}>\r\n                                       {\r\n                                          this.state.staffTableSort.sort == \"name\" ?\r\n                                             this.state.staffTableSort.sortOrder == 1 ? <ArrowDownwardIcon /> : <ArrowUpwardIcon />\r\n                                             : <ArrowUpwardIcon style={{ opacity: .2 }} />\r\n                                       }\r\n\r\n                                    </IconButton></TableCell>\r\n                                    <TableCell align=\"\">Phone</TableCell>\r\n                                    {/* <TableCell align=\"\">SR <IconButton onClick={() => { this.handleSortClick(\"charge\") }}>\r\n                                       {\r\n                                          this.state.serviceTableSort.sort == \"charge\" ?\r\n                                             this.state.serviceTableSort.sortOrder == 1 ? <ArrowDownwardIcon /> : <ArrowUpwardIcon />\r\n                                             : <ArrowUpwardIcon style={{ opacity: .2 }} />\r\n                                       }\r\n\r\n                                    </IconButton></TableCell> */}\r\n                                    <TableCell align=\"\">Actions</TableCell>\r\n                                 </TableRow>\r\n                              </TableHead>\r\n                              <TableBody>\r\n                                 {\r\n                                    this.context.state.staffList ?\r\n                                       this.context.state.staffList.data.map((row) => (\r\n\r\n                                          <TableRow key={row._id}>\r\n                                             <TableCell component=\"th\" scope=\"row\">{row.name}</TableCell>\r\n                                             <TableCell align=\"\">{row.phone} </TableCell>\r\n                                             {/* <TableCell align=\"\">{row.charge} </TableCell> */}\r\n                                             <TableCell align=\"\">\r\n                                                <IconButton onClick={() => this.handleDetails(row._id)} aria-label=\"delete\">\r\n                                                   <VisibilityIcon />\r\n                                                </IconButton>\r\n                                                <IconButton onClick={() => this.props.editStaff(row)} aria-label=\"delete\">\r\n                                                   <EditIcon />\r\n                                                </IconButton>\r\n                                                <IconButton onClick={() => this.handleStaffDelete(row._id)} aria-label=\"delete\">\r\n                                                   <DeleteIcon />\r\n                                                </IconButton>\r\n                                             </TableCell>\r\n                                          </TableRow>\r\n                                       )) : null\r\n                                 }\r\n                              </TableBody>\r\n                           </Table>\r\n                        </TableContainer>\r\n                        <Card>\r\n                           <Box p={2} justifyContent=\"flex-end\" display=\"flex\">\r\n                              <div className=\"pageRowWp\">\r\n                                 <span>Page per row</span>\r\n                                 <TextField\r\n\r\n                                    style={{ maxWidth: 50, margin: 0 }}\r\n                                    id=\"standard-select-currency-native\"\r\n                                    select\r\n                                    onChange={this.handleRowChange}\r\n                                    SelectProps={{\r\n                                       native: true,\r\n                                    }}\r\n                                 >\r\n                                    <option value=\"5\">5</option>\r\n                                    <option value=\"10\">10</option>\r\n                                    <option value=\"15\">15</option>\r\n                                 </TextField>\r\n                              </div>\r\n                              <Pagination variant=\"outlined\" page={this.context.state.currentStafflistPageNumber} shape=\"rounded\" count={this.context.state.staffList.page.totalPage}\r\n                                 onChange={(event, value) => { this.handlePaginationClick(event, value) }} />\r\n                           </Box>\r\n                        </Card>\r\n                     </div> : \"no data found\"\r\n                  }\r\n               </Grid>\r\n            </Grid>\r\n            {this.renderStaffDetailsModal()}\r\n         </>\r\n      );\r\n   }\r\n}\r\n\r\nServiceList.contextType = AppContext;\r\n\r\nexport default ServiceList;","Z:\\hospital-admin\\src\\components\\DiseaseCategory\\DiseaseCategoryList\\DiseaseCategoryList.js",["279","280","281","282","283","284","285"],"import React, { Component } from 'react';\r\nimport { AppContext } from '../../../context/AppContextProvider';\r\n\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport axios from 'axios';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport { fetchZoneList } from \"../../../Api/zone-api\";\r\nimport { Box, CircularProgress } from '@material-ui/core';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Card from '@material-ui/core/Card';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport { deleteDiseaseCat } from \"../../../Api/disease-api\";\r\n\r\nclass DiseaseCategoryList extends Component {\r\n\r\n   state = {\r\n      currentPage: 1,\r\n      diseaseCatTableSort: {\r\n         sort: \"name\",\r\n         sortOrder: 1\r\n      },\r\n      diseaseCatDetails: null,\r\n      diseaseCatDetailsModalOpen: false,\r\n      isloading: false\r\n   }\r\n\r\n   startLoading = () => {\r\n      this.setState({ isloading: true })\r\n   };\r\n\r\n\r\n   stopLoading = () => {\r\n      this.setState({ isloading: false })\r\n   };\r\n\r\n\r\n   handleDiseaseCatDelete = (id) => {\r\n\r\n      var r = window.confirm(\"Do you want to delete the item?\");\r\n      if (r == true) {\r\n         deleteDiseaseCat(id)\r\n            .then((response) => {\r\n               console.log(response);\r\n               this.context.updateDiseaseCatList()\r\n            })\r\n            .catch(function (error) {\r\n               console.log(error);\r\n            })\r\n            .then(function () {\r\n               // always executed\r\n            });\r\n      } else {\r\n\r\n      }\r\n   }\r\n\r\n   handleRowChange = (event) => {\r\n      console.log(event.target.value)\r\n      this.context.updateDiseaseCatList(1, event.target.value, this.context.state.diseaseCatTableSort.sort,\r\n         this.context.state.diseaseCatTableSort.sortOrder)\r\n   }\r\n\r\n   handleDiseaseCatEdit = (id) => {\r\n      console.log(id)\r\n   }\r\n\r\n\r\n   handlePaginationClick = (event, value) => {\r\n      // this.startLoading();\r\n      this.context.updateDiseaseCatList(value, this.context.state.diseaseCatTableRowNumber,\r\n         this.context.state.diseaseCatTableSort.sort, this.context.state.diseaseCatTableSort.sortOrder)\r\n      // this.context.updateCurrentDiseaseCatlistPageNumber(value, this.stopLoading)\r\n   }\r\n\r\n   handleSortClick = (sort) => {\r\n      this.setState(preState => {\r\n         return {\r\n            diseaseCatTableSort: {\r\n               sort,\r\n               sortOrder: preState.diseaseCatTableSort.sortOrder == 1 ? -1 : 1\r\n            },\r\n            currentPage: 1\r\n         }\r\n      }, () => {\r\n         console.log(this.state)\r\n         // this.context.sortDiseaseCattable(this.state.diseaseCatTableSort.sort,\r\n         //    this.state.diseaseCatTableSort.sortOrder)\r\n\r\n         this.context.updateDiseaseCatList(1, this.context.state.diseaseCatTableRowNumber, this.state.diseaseCatTableSort.sort,\r\n            this.state.diseaseCatTableSort.sortOrder)\r\n      })\r\n   }\r\n\r\n   handleDiseaseCatDetailsModalOpen = () => {\r\n      this.setState({\r\n         diseaseCatDetailsModalOpen: true\r\n      })\r\n   }\r\n\r\n   handleDiseaseCatDetailsModalClose = () => {\r\n      this.setState({\r\n         diseaseCatDetailsModalOpen: false\r\n      })\r\n   }\r\n\r\n   renderDiseaseCatDetailsModal = () => {\r\n      return (\r\n         <Modal\r\n            className=\"modal\"\r\n            aria-labelledby=\"transition-modal-title\"\r\n            aria-describedby=\"transition-modal-description\"\r\n            open={this.state.diseaseCatDetailsModalOpen}\r\n            onClose={this.handleDiseaseCatDetailsModalClose}\r\n            closeAfterTransition\r\n            BackdropComponent={Backdrop}\r\n            BackdropProps={{\r\n               timeout: 500,\r\n            }}\r\n         >\r\n            <Fade in={this.state.diseaseCatDetailsModalOpen}>\r\n               <Grid container spacing={3}>\r\n                  <Grid item xs={6} className=\"col_center\">\r\n                     <Card>\r\n                        <CardHeader\r\n                           action={\r\n                              <IconButton onClick={this.handleDiseaseCatDetailsModalClose} aria-label=\"settings\">\r\n                                 <CloseIcon />\r\n                              </IconButton>\r\n                           }\r\n                           title=\"Service Details\"\r\n                        />\r\n                        <CardContent>\r\n                           {\r\n                              this.state.diseaseCatDetails ?\r\n                                 <TableContainer component={Paper}>\r\n                                    <Table size=\"small\" aria-label=\"simple table\">\r\n                                       <TableBody>\r\n                                          <TableRow>\r\n                                             <TableCell align=\"\"><strong>Disease Category Name</strong></TableCell>\r\n                                             <TableCell align=\"\">{this.state.diseaseCatDetails.name}</TableCell>\r\n                                          </TableRow>\r\n                                       </TableBody>\r\n                                    </Table>\r\n                                 </TableContainer>\r\n                                 : null\r\n                           }\r\n                        </CardContent>\r\n                     </Card>\r\n                  </Grid>\r\n               </Grid>\r\n            </Fade>\r\n         </Modal >\r\n      )\r\n   }\r\n\r\n   handleDiseaseCatDetails = (id) => {\r\n      // fetchDiseaseCatDetails(id).then((response) => {\r\n      //    this.setState({\r\n      //       diseaseCatDetails: response.data\r\n      //    }, () => {\r\n      //       this.setState({\r\n      //          diseaseCatDetailsModalOpen: true\r\n      //       })\r\n      //    })\r\n      //    console.log(response);\r\n      // })\r\n      //    .catch(function (error) {\r\n      //       console.log(error);\r\n      //    })\r\n      //    .then(function () {\r\n      //       // always executed\r\n      //    });\r\n   }\r\n\r\n   componentDidMount() {\r\n      this.context.updateDiseaseCatList()\r\n   }\r\n\r\n   render() {\r\n      return (\r\n         <>\r\n            {this.context.state.diseaseCatList ?\r\n               <div className=\"table_wrapper\">\r\n                  {this.state.isloading &&\r\n                     <div className=\"loader_area\">\r\n                        <CircularProgress />\r\n                     </div>\r\n                  }\r\n                  <TableContainer style={{ maxHeight: 500, }} component={Paper}>\r\n                     <Table stickyHeader={true} aria-label=\"simple table\" size=\"small\" >\r\n                        <TableHead>\r\n                           <TableRow>\r\n                              <TableCell>Disease Category Name <IconButton onClick={() => { this.handleSortClick(\"name\") }}>\r\n                                 {\r\n                                    this.state.diseaseCatTableSort.sort == \"name\" ?\r\n                                       this.state.diseaseCatTableSort.sortOrder == 1 ? <ArrowDownwardIcon /> : <ArrowUpwardIcon />\r\n                                       : <ArrowUpwardIcon style={{ opacity: .2 }} />\r\n                                 }\r\n\r\n                              </IconButton></TableCell>\r\n                              <TableCell align=\"\">Actions</TableCell>\r\n                           </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                           {\r\n                              this.context.state.diseaseCatList ?\r\n                                 this.context.state.diseaseCatList.data.map((row) => (\r\n\r\n                                    <TableRow key={row._id}>\r\n                                       <TableCell component=\"th\" scope=\"row\">{row.name}</TableCell>\r\n                                       <TableCell align=\"\">\r\n                                          <IconButton onClick={() => this.handleDiseaseCatDetails(row._id)} aria-label=\"delete\">\r\n                                             <VisibilityIcon />\r\n                                          </IconButton>\r\n                                          <IconButton onClick={() => this.props.editDiseaseCategory(row)} aria-label=\"delete\">\r\n                                             <EditIcon />\r\n                                          </IconButton>\r\n                                          <IconButton onClick={() => this.handleDiseaseCatDelete(row._id)} aria-label=\"delete\">\r\n                                             <DeleteIcon />\r\n                                          </IconButton>\r\n                                       </TableCell>\r\n                                    </TableRow>\r\n                                 )) : null\r\n                           }\r\n                        </TableBody>\r\n\r\n                     </Table>\r\n\r\n                  </TableContainer>\r\n                  <Card>\r\n                     <Box p={2} justifyContent=\"flex-end\" display=\"flex\">\r\n                        <div className=\"pageRowWp\">\r\n                           <span>Page per row</span>\r\n                           <TextField\r\n\r\n                              style={{ maxWidth: 50, margin: 0 }}\r\n                              id=\"standard-select-currency-native\"\r\n                              select\r\n                              value={this.context.state.diseaseCatTableRowNumber}\r\n                              onChange={this.handleRowChange}\r\n                              SelectProps={{\r\n                                 native: true,\r\n                              }}\r\n                           >\r\n                              <option value=\"5\">5</option>\r\n                              <option value=\"10\">10</option>\r\n                              <option value=\"15\">15</option>\r\n                           </TextField>\r\n                        </div>\r\n                        <Pagination variant=\"outlined\" page={this.context.state.currentDiseaseCatlistPageNumber} shape=\"rounded\"\r\n                           count={this.context.state.diseaseCatList.page.totalPage}\r\n                           onChange={(event, value) => { this.handlePaginationClick(event, value) }} />\r\n                     </Box>\r\n                  </Card>\r\n               </div> : \"no data found\"\r\n            }\r\n            {this.renderDiseaseCatDetailsModal()}\r\n         </>\r\n      );\r\n   }\r\n}\r\n\r\nDiseaseCategoryList.contextType = AppContext;\r\n\r\nexport default DiseaseCategoryList;","Z:\\hospital-admin\\src\\components\\Area\\zoneList\\ZoneList.js",["286","287","288","289","290","291","292"],"Z:\\hospital-admin\\src\\components\\Service\\ServiceList\\ServiceList.js",["293","294","295","296","297","298","299","300","301"],"Z:\\hospital-admin\\src\\components\\Hospital\\HospitalList\\HospitalList.js",["302","303","304","305","306","307","308","309","310","311","312","313","314","315"],"Z:\\hospital-admin\\src\\components\\ImageHandlerModal\\ImageHandlerModal.jsx",[],"Z:\\hospital-admin\\src\\components\\ImageHandlerModal\\ImageControl\\ImageControl.jsx",["316"],"Z:\\hospital-admin\\src\\components\\ImageHandlerModal\\ImageControl\\UploadImage\\UploadImage.jsx",[],"Z:\\hospital-admin\\src\\components\\ImageHandlerModal\\ImageControl\\ThumbImage\\ThumbImage.jsx",[],"Z:\\hospital-admin\\src\\components\\ImageHandlerModal\\ImageControl\\Helper\\Helper.js",[],"Z:\\hospital-admin\\src\\components\\ImageHandlerModal\\ImageControl\\UploadImage\\ImageUploader\\ImageUploader.jsx",[],{"ruleId":"317","severity":1,"message":"318","line":6,"column":4,"nodeType":"319","messageId":"320","endLine":6,"endColumn":17},{"ruleId":"317","severity":1,"message":"321","line":7,"column":4,"nodeType":"319","messageId":"320","endLine":7,"endColumn":14},{"ruleId":"322","severity":1,"message":"323","line":124,"column":76,"nodeType":"324","messageId":"325","endLine":124,"endColumn":78},{"ruleId":"317","severity":1,"message":"321","line":2,"column":17,"nodeType":"319","messageId":"320","endLine":2,"endColumn":27},{"ruleId":"317","severity":1,"message":"326","line":12,"column":8,"nodeType":"319","messageId":"320","endLine":12,"endColumn":19},{"ruleId":"317","severity":1,"message":"327","line":2,"column":8,"nodeType":"319","messageId":"320","endLine":2,"endColumn":13},{"ruleId":"317","severity":1,"message":"326","line":9,"column":8,"nodeType":"319","messageId":"320","endLine":9,"endColumn":19},{"ruleId":"317","severity":1,"message":"327","line":2,"column":8,"nodeType":"319","messageId":"320","endLine":2,"endColumn":13},{"ruleId":"317","severity":1,"message":"326","line":10,"column":8,"nodeType":"319","messageId":"320","endLine":10,"endColumn":19},{"ruleId":"317","severity":1,"message":"326","line":12,"column":8,"nodeType":"319","messageId":"320","endLine":12,"endColumn":19},{"ruleId":"317","severity":1,"message":"328","line":14,"column":8,"nodeType":"319","messageId":"320","endLine":14,"endColumn":11},{"ruleId":"317","severity":1,"message":"329","line":15,"column":8,"nodeType":"319","messageId":"320","endLine":15,"endColumn":15},{"ruleId":"317","severity":1,"message":"326","line":12,"column":8,"nodeType":"319","messageId":"320","endLine":12,"endColumn":19},{"ruleId":"317","severity":1,"message":"330","line":6,"column":8,"nodeType":"319","messageId":"320","endLine":6,"endColumn":16},{"ruleId":"317","severity":1,"message":"326","line":11,"column":8,"nodeType":"319","messageId":"320","endLine":11,"endColumn":19},{"ruleId":"317","severity":1,"message":"331","line":19,"column":10,"nodeType":"319","messageId":"320","endLine":19,"endColumn":26},{"ruleId":"317","severity":1,"message":"326","line":11,"column":8,"nodeType":"319","messageId":"320","endLine":11,"endColumn":19},{"ruleId":"332","severity":1,"message":"333","line":35,"column":7,"nodeType":"334","messageId":"335","endLine":35,"endColumn":12},{"ruleId":"332","severity":1,"message":"336","line":36,"column":7,"nodeType":"334","messageId":"335","endLine":36,"endColumn":12},{"ruleId":"317","severity":1,"message":"326","line":11,"column":8,"nodeType":"319","messageId":"320","endLine":11,"endColumn":19},{"ruleId":"317","severity":1,"message":"337","line":20,"column":20,"nodeType":"319","messageId":"320","endLine":20,"endColumn":28},{"ruleId":"317","severity":1,"message":"330","line":6,"column":8,"nodeType":"319","messageId":"320","endLine":6,"endColumn":16},{"ruleId":"317","severity":1,"message":"326","line":11,"column":8,"nodeType":"319","messageId":"320","endLine":11,"endColumn":19},{"ruleId":"317","severity":1,"message":"338","line":4,"column":25,"nodeType":"319","messageId":"320","endLine":4,"endColumn":29},{"ruleId":"317","severity":1,"message":"339","line":5,"column":20,"nodeType":"319","messageId":"320","endLine":5,"endColumn":24},{"ruleId":"317","severity":1,"message":"340","line":6,"column":4,"nodeType":"319","messageId":"320","endLine":6,"endColumn":10},{"ruleId":"317","severity":1,"message":"341","line":6,"column":12,"nodeType":"319","messageId":"320","endLine":6,"endColumn":23},{"ruleId":"317","severity":1,"message":"342","line":6,"column":25,"nodeType":"319","messageId":"320","endLine":6,"endColumn":38},{"ruleId":"317","severity":1,"message":"343","line":6,"column":40,"nodeType":"319","messageId":"320","endLine":6,"endColumn":61},{"ruleId":"317","severity":1,"message":"344","line":6,"column":63,"nodeType":"319","messageId":"320","endLine":6,"endColumn":84},{"ruleId":"317","severity":1,"message":"330","line":7,"column":4,"nodeType":"319","messageId":"320","endLine":7,"endColumn":12},{"ruleId":"317","severity":1,"message":"345","line":7,"column":14,"nodeType":"319","messageId":"320","endLine":7,"endColumn":23},{"ruleId":"317","severity":1,"message":"346","line":7,"column":25,"nodeType":"319","messageId":"320","endLine":7,"endColumn":41},{"ruleId":"317","severity":1,"message":"347","line":7,"column":43,"nodeType":"319","messageId":"320","endLine":7,"endColumn":48},{"ruleId":"317","severity":1,"message":"348","line":7,"column":50,"nodeType":"319","messageId":"320","endLine":7,"endColumn":60},{"ruleId":"317","severity":1,"message":"349","line":7,"column":62,"nodeType":"319","messageId":"320","endLine":7,"endColumn":68},{"ruleId":"317","severity":1,"message":"350","line":7,"column":70,"nodeType":"319","messageId":"320","endLine":7,"endColumn":81},{"ruleId":"317","severity":1,"message":"351","line":7,"column":83,"nodeType":"319","messageId":"320","endLine":7,"endColumn":89},{"ruleId":"317","severity":1,"message":"352","line":11,"column":22,"nodeType":"319","messageId":"320","endLine":11,"endColumn":32},{"ruleId":"317","severity":1,"message":"353","line":11,"column":34,"nodeType":"319","messageId":"320","endLine":11,"endColumn":46},{"ruleId":"317","severity":1,"message":"354","line":11,"column":54,"nodeType":"319","messageId":"320","endLine":11,"endColumn":59},{"ruleId":"317","severity":1,"message":"355","line":12,"column":10,"nodeType":"319","messageId":"320","endLine":12,"endColumn":14},{"ruleId":"317","severity":1,"message":"321","line":12,"column":16,"nodeType":"319","messageId":"320","endLine":12,"endColumn":26},{"ruleId":"317","severity":1,"message":"356","line":12,"column":28,"nodeType":"319","messageId":"320","endLine":12,"endColumn":33},{"ruleId":"317","severity":1,"message":"318","line":12,"column":44,"nodeType":"319","messageId":"320","endLine":12,"endColumn":57},{"ruleId":"317","severity":1,"message":"357","line":12,"column":59,"nodeType":"319","messageId":"320","endLine":12,"endColumn":67},{"ruleId":"317","severity":1,"message":"358","line":17,"column":8,"nodeType":"319","messageId":"320","endLine":17,"endColumn":20},{"ruleId":"317","severity":1,"message":"359","line":145,"column":34,"nodeType":"319","messageId":"320","endLine":145,"endColumn":52},{"ruleId":"360","severity":1,"message":"361","line":163,"column":16,"nodeType":"362","endLine":163,"endColumn":73},{"ruleId":"363","severity":1,"message":"364","line":240,"column":19,"nodeType":"362","endLine":240,"endColumn":137},{"ruleId":"365","severity":1,"message":"366","line":269,"column":50,"nodeType":"367","messageId":"368","endLine":269,"endColumn":51},{"ruleId":"317","severity":1,"message":"327","line":13,"column":8,"nodeType":"319","messageId":"320","endLine":13,"endColumn":13},{"ruleId":"317","severity":1,"message":"369","line":15,"column":10,"nodeType":"319","messageId":"320","endLine":15,"endColumn":23},{"ruleId":"370","severity":1,"message":"371","line":72,"column":13,"nodeType":"367","messageId":"335","endLine":72,"endColumn":15},{"ruleId":"370","severity":1,"message":"371","line":121,"column":62,"nodeType":"367","messageId":"335","endLine":121,"endColumn":64},{"ruleId":"370","severity":1,"message":"371","line":466,"column":75,"nodeType":"367","messageId":"335","endLine":466,"endColumn":77},{"ruleId":"370","severity":1,"message":"371","line":467,"column":83,"nodeType":"367","messageId":"335","endLine":467,"endColumn":85},{"ruleId":"370","severity":1,"message":"371","line":476,"column":75,"nodeType":"367","messageId":"335","endLine":476,"endColumn":77},{"ruleId":"370","severity":1,"message":"371","line":477,"column":83,"nodeType":"367","messageId":"335","endLine":477,"endColumn":85},{"ruleId":"370","severity":1,"message":"371","line":54,"column":13,"nodeType":"367","messageId":"335","endLine":54,"endColumn":15},{"ruleId":"370","severity":1,"message":"371","line":132,"column":64,"nodeType":"367","messageId":"335","endLine":132,"endColumn":66},{"ruleId":"370","severity":1,"message":"371","line":326,"column":80,"nodeType":"367","messageId":"335","endLine":326,"endColumn":82},{"ruleId":"370","severity":1,"message":"371","line":327,"column":88,"nodeType":"367","messageId":"335","endLine":327,"endColumn":90},{"ruleId":"317","severity":1,"message":"327","line":13,"column":8,"nodeType":"319","messageId":"320","endLine":13,"endColumn":13},{"ruleId":"317","severity":1,"message":"369","line":15,"column":10,"nodeType":"319","messageId":"320","endLine":15,"endColumn":23},{"ruleId":"317","severity":1,"message":"372","line":29,"column":8,"nodeType":"319","messageId":"320","endLine":29,"endColumn":18},{"ruleId":"317","severity":1,"message":"346","line":31,"column":8,"nodeType":"319","messageId":"320","endLine":31,"endColumn":24},{"ruleId":"317","severity":1,"message":"373","line":32,"column":8,"nodeType":"319","messageId":"320","endLine":32,"endColumn":16},{"ruleId":"317","severity":1,"message":"374","line":33,"column":10,"nodeType":"319","messageId":"320","endLine":33,"endColumn":28},{"ruleId":"317","severity":1,"message":"375","line":34,"column":8,"nodeType":"319","messageId":"320","endLine":34,"endColumn":17},{"ruleId":"317","severity":1,"message":"376","line":35,"column":8,"nodeType":"319","messageId":"320","endLine":35,"endColumn":24},{"ruleId":"317","severity":1,"message":"377","line":36,"column":8,"nodeType":"319","messageId":"320","endLine":36,"endColumn":24},{"ruleId":"317","severity":1,"message":"378","line":40,"column":8,"nodeType":"319","messageId":"320","endLine":40,"endColumn":22},{"ruleId":"370","severity":1,"message":"371","line":122,"column":62,"nodeType":"367","messageId":"335","endLine":122,"endColumn":64},{"ruleId":"370","severity":1,"message":"371","line":337,"column":75,"nodeType":"367","messageId":"335","endLine":337,"endColumn":77},{"ruleId":"370","severity":1,"message":"371","line":338,"column":83,"nodeType":"367","messageId":"335","endLine":338,"endColumn":85},{"ruleId":"370","severity":1,"message":"371","line":346,"column":75,"nodeType":"367","messageId":"335","endLine":346,"endColumn":77},{"ruleId":"370","severity":1,"message":"371","line":347,"column":83,"nodeType":"367","messageId":"335","endLine":347,"endColumn":85},{"ruleId":"317","severity":1,"message":"327","line":13,"column":8,"nodeType":"319","messageId":"320","endLine":13,"endColumn":13},{"ruleId":"317","severity":1,"message":"369","line":15,"column":10,"nodeType":"319","messageId":"320","endLine":15,"endColumn":23},{"ruleId":"317","severity":1,"message":"346","line":24,"column":8,"nodeType":"319","messageId":"320","endLine":24,"endColumn":24},{"ruleId":"317","severity":1,"message":"373","line":25,"column":8,"nodeType":"319","messageId":"320","endLine":25,"endColumn":16},{"ruleId":"317","severity":1,"message":"375","line":28,"column":8,"nodeType":"319","messageId":"320","endLine":28,"endColumn":17},{"ruleId":"317","severity":1,"message":"376","line":29,"column":8,"nodeType":"319","messageId":"320","endLine":29,"endColumn":24},{"ruleId":"317","severity":1,"message":"377","line":30,"column":8,"nodeType":"319","messageId":"320","endLine":30,"endColumn":24},{"ruleId":"317","severity":1,"message":"372","line":34,"column":8,"nodeType":"319","messageId":"320","endLine":34,"endColumn":18},{"ruleId":"317","severity":1,"message":"378","line":36,"column":8,"nodeType":"319","messageId":"320","endLine":36,"endColumn":22},{"ruleId":"317","severity":1,"message":"379","line":39,"column":10,"nodeType":"319","messageId":"320","endLine":39,"endColumn":29},{"ruleId":"317","severity":1,"message":"380","line":39,"column":31,"nodeType":"319","messageId":"320","endLine":39,"endColumn":44},{"ruleId":"370","severity":1,"message":"371","line":68,"column":13,"nodeType":"367","messageId":"335","endLine":68,"endColumn":15},{"ruleId":"370","severity":1,"message":"371","line":109,"column":63,"nodeType":"367","messageId":"335","endLine":109,"endColumn":65},{"ruleId":"370","severity":1,"message":"371","line":322,"column":76,"nodeType":"367","messageId":"335","endLine":322,"endColumn":78},{"ruleId":"370","severity":1,"message":"371","line":323,"column":84,"nodeType":"367","messageId":"335","endLine":323,"endColumn":86},{"ruleId":"381","replacedBy":"382"},{"ruleId":"383","replacedBy":"384"},{"ruleId":"317","severity":1,"message":"327","line":13,"column":8,"nodeType":"319","messageId":"320","endLine":13,"endColumn":13},{"ruleId":"317","severity":1,"message":"369","line":15,"column":10,"nodeType":"319","messageId":"320","endLine":15,"endColumn":23},{"ruleId":"370","severity":1,"message":"371","line":69,"column":13,"nodeType":"367","messageId":"335","endLine":69,"endColumn":15},{"ruleId":"370","severity":1,"message":"371","line":110,"column":63,"nodeType":"367","messageId":"335","endLine":110,"endColumn":65},{"ruleId":"370","severity":1,"message":"371","line":348,"column":74,"nodeType":"367","messageId":"335","endLine":348,"endColumn":76},{"ruleId":"370","severity":1,"message":"371","line":349,"column":82,"nodeType":"367","messageId":"335","endLine":349,"endColumn":84},{"ruleId":"317","severity":1,"message":"327","line":13,"column":8,"nodeType":"319","messageId":"320","endLine":13,"endColumn":13},{"ruleId":"317","severity":1,"message":"369","line":15,"column":10,"nodeType":"319","messageId":"320","endLine":15,"endColumn":23},{"ruleId":"317","severity":1,"message":"372","line":29,"column":8,"nodeType":"319","messageId":"320","endLine":29,"endColumn":18},{"ruleId":"370","severity":1,"message":"371","line":60,"column":13,"nodeType":"367","messageId":"335","endLine":60,"endColumn":15},{"ruleId":"370","severity":1,"message":"371","line":100,"column":66,"nodeType":"367","messageId":"335","endLine":100,"endColumn":68},{"ruleId":"370","severity":1,"message":"371","line":215,"column":73,"nodeType":"367","messageId":"335","endLine":215,"endColumn":75},{"ruleId":"370","severity":1,"message":"371","line":216,"column":81,"nodeType":"367","messageId":"335","endLine":216,"endColumn":83},{"ruleId":"317","severity":1,"message":"369","line":14,"column":10,"nodeType":"319","messageId":"320","endLine":14,"endColumn":23},{"ruleId":"370","severity":1,"message":"371","line":69,"column":13,"nodeType":"367","messageId":"335","endLine":69,"endColumn":15},{"ruleId":"370","severity":1,"message":"371","line":116,"column":60,"nodeType":"367","messageId":"335","endLine":116,"endColumn":62},{"ruleId":"370","severity":1,"message":"371","line":363,"column":73,"nodeType":"367","messageId":"335","endLine":363,"endColumn":75},{"ruleId":"370","severity":1,"message":"371","line":364,"column":81,"nodeType":"367","messageId":"335","endLine":364,"endColumn":83},{"ruleId":"370","severity":1,"message":"371","line":371,"column":73,"nodeType":"367","messageId":"335","endLine":371,"endColumn":75},{"ruleId":"370","severity":1,"message":"371","line":372,"column":81,"nodeType":"367","messageId":"335","endLine":372,"endColumn":83},{"ruleId":"317","severity":1,"message":"327","line":13,"column":8,"nodeType":"319","messageId":"320","endLine":13,"endColumn":13},{"ruleId":"317","severity":1,"message":"369","line":15,"column":10,"nodeType":"319","messageId":"320","endLine":15,"endColumn":23},{"ruleId":"370","severity":1,"message":"371","line":68,"column":13,"nodeType":"367","messageId":"335","endLine":68,"endColumn":15},{"ruleId":"370","severity":1,"message":"371","line":109,"column":63,"nodeType":"367","messageId":"335","endLine":109,"endColumn":65},{"ruleId":"360","severity":1,"message":"361","line":206,"column":61,"nodeType":"362","endLine":206,"endColumn":113},{"ruleId":"370","severity":1,"message":"371","line":379,"column":76,"nodeType":"367","messageId":"335","endLine":379,"endColumn":78},{"ruleId":"370","severity":1,"message":"371","line":380,"column":84,"nodeType":"367","messageId":"335","endLine":380,"endColumn":86},{"ruleId":"370","severity":1,"message":"371","line":388,"column":76,"nodeType":"367","messageId":"335","endLine":388,"endColumn":78},{"ruleId":"370","severity":1,"message":"371","line":389,"column":84,"nodeType":"367","messageId":"335","endLine":389,"endColumn":86},{"ruleId":"317","severity":1,"message":"327","line":13,"column":8,"nodeType":"319","messageId":"320","endLine":13,"endColumn":13},{"ruleId":"317","severity":1,"message":"369","line":15,"column":10,"nodeType":"319","messageId":"320","endLine":15,"endColumn":23},{"ruleId":"370","severity":1,"message":"371","line":69,"column":13,"nodeType":"367","messageId":"335","endLine":69,"endColumn":15},{"ruleId":"370","severity":1,"message":"371","line":114,"column":64,"nodeType":"367","messageId":"335","endLine":114,"endColumn":66},{"ruleId":"360","severity":1,"message":"361","line":222,"column":61,"nodeType":"362","endLine":222,"endColumn":113},{"ruleId":"363","severity":1,"message":"364","line":230,"column":43,"nodeType":"362","endLine":230,"endColumn":152},{"ruleId":"370","severity":1,"message":"371","line":381,"column":77,"nodeType":"367","messageId":"335","endLine":381,"endColumn":79},{"ruleId":"370","severity":1,"message":"371","line":382,"column":85,"nodeType":"367","messageId":"335","endLine":382,"endColumn":87},{"ruleId":"370","severity":1,"message":"371","line":389,"column":77,"nodeType":"367","messageId":"335","endLine":389,"endColumn":79},{"ruleId":"370","severity":1,"message":"371","line":390,"column":85,"nodeType":"367","messageId":"335","endLine":390,"endColumn":87},{"ruleId":"370","severity":1,"message":"371","line":398,"column":77,"nodeType":"367","messageId":"335","endLine":398,"endColumn":79},{"ruleId":"370","severity":1,"message":"371","line":399,"column":85,"nodeType":"367","messageId":"335","endLine":399,"endColumn":87},{"ruleId":"370","severity":1,"message":"371","line":406,"column":77,"nodeType":"367","messageId":"335","endLine":406,"endColumn":79},{"ruleId":"370","severity":1,"message":"371","line":407,"column":85,"nodeType":"367","messageId":"335","endLine":407,"endColumn":87},{"ruleId":"385","severity":1,"message":"386","line":63,"column":6,"nodeType":"387","endLine":63,"endColumn":8,"suggestions":"388"},"no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","'withRouter' is defined but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'CardActions' is defined but never used.","'axios' is defined but never used.","'Fab' is defined but never used.","'AddIcon' is defined but never used.","'MenuItem' is defined but never used.","'fetchAllHospital' is defined but never used.","no-dupe-keys","Duplicate key 'image'.","ObjectExpression","unexpected","Duplicate key 'cover'.","'editForm' is defined but never used.","'Menu' is defined but never used.","'Grid' is defined but never used.","'Dialog' is defined but never used.","'DialogTitle' is defined but never used.","'DialogContent' is defined but never used.","'ExpansionPanelDetails' is defined but never used.","'ExpansionPanelSummary' is defined but never used.","'FormLabel' is defined but never used.","'FormControlLabel' is defined but never used.","'Radio' is defined but never used.","'RadioGroup' is defined but never used.","'Select' is defined but never used.","'FormControl' is defined but never used.","'Button' is defined but never used.","'makeStyles' is defined but never used.","'createStyles' is defined but never used.","'Theme' is defined but never used.","'Link' is defined but never used.","'Route' is defined but never used.","'Redirect' is defined but never used.","'ListItemIcon' is defined but never used.","'mobileOpenSettings' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'fetchZoneList' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","'Typography' is defined but never used.","'Checkbox' is defined but never used.","'fetchAllDiseaseCat' is defined but never used.","'Accordion' is defined but never used.","'AccordionSummary' is defined but never used.","'AccordionDetails' is defined but never used.","'ExpandMoreIcon' is defined but never used.","'fetchServiceDetails' is defined but never used.","'deleteService' is defined but never used.","no-native-reassign",["389"],"no-negated-in-lhs",["390"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'prevSelectedImageIds'. Either include it or remove the dependency array. If 'setSelectImage' needs the current value of 'prevSelectedImageIds', you can also switch to useReducer instead of useState and read 'prevSelectedImageIds' in the reducer.","ArrayExpression",["391"],"no-global-assign","no-unsafe-negation",{"desc":"392","fix":"393"},"Update the dependencies array to be: [prevSelectedImageIds]",{"range":"394","text":"395"},[1914,1916],"[prevSelectedImageIds]"]